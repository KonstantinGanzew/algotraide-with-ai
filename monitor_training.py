#!/usr/bin/env python3
import subprocess
import time
import os

def monitor_process():
    pid = 177228
    print("üöÄ –ú–û–ù–ò–¢–û–†–ò–ù–ì –û–ë–£–ß–ï–ù–ò–Ø RL –ê–ì–ï–ù–¢–ê")
    print("=" * 50)
    
    while True:
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –µ—â–µ –∂–∏–≤
            if not os.path.exists(f'/proc/{pid}'):
                print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
                break
                
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
            with open(f'/proc/{pid}/stat', 'r') as f:
                stat_data = f.read().split()
                
            # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            uptime_ticks = int(stat_data[21])
            uptime_seconds = uptime_ticks // 100  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è 100 Hz
            hours = uptime_seconds // 3600
            minutes = (uptime_seconds % 3600) // 60
            secs = uptime_seconds % 60
            
            # GPU —Å—Ç–∞—Ç—É—Å
            gpu_result = subprocess.run([
                'nvidia-smi', '--query-gpu=temperature.gpu,power.draw,utilization.gpu,memory.used',
                '--format=csv,noheader,nounits'
            ], capture_output=True, text=True)
            
            if gpu_result.returncode == 0:
                gpu_temp, gpu_power, gpu_util, gpu_mem = gpu_result.stdout.strip().split(', ')
            else:
                gpu_temp = gpu_power = gpu_util = gpu_mem = "N/A"
            
            # –ü–∞–º—è—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞
            mem_result = subprocess.run([
                'ps', '-p', str(pid), '-o', 'rss=', '--no-headers'
            ], capture_output=True, text=True)
            
            if mem_result.returncode == 0:
                memory_kb = int(mem_result.stdout.strip())
                memory_mb = memory_kb // 1024
            else:
                memory_mb = 0
                
            print(f"\rüïí –í—Ä–µ–º—è: {hours:02d}:{minutes:02d}:{secs:02d} | "
                  f"üå°Ô∏è {gpu_temp}¬∞C | ‚ö° {gpu_power}W | üéØ {gpu_util}% | "
                  f"üíæ {memory_mb}MB RAM | üñ•Ô∏è {gpu_mem}MB VRAM", end="", flush=True)
            
            time.sleep(2)
            
        except KeyboardInterrupt:
            print("\nüëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            break
        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
            time.sleep(5)

if __name__ == "__main__":
    monitor_process()
